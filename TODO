TODO
====

* intermediary.tex: change L(P_i) to A_i and L(Q_i) to B_i?
* is it necessary to require polynomially clocked TM?
* show that GI <_ker A (from thm:npeqcnpc), providing an upper bound in NPEq
* given an arbitrary NPEq complete language in which some equivalence classes
  are finite, construct another language (polytime kernel reducible to it or
  from it) in which all equivalence classes are finite
* with the previous point: construct NP equivalence relation from arbitrary
  graph property harder than isomorphism
* examine NP disjoint pairs: http://www.cse.buffalo.edu/~selman/NPpairs.pdf
* and canonical proof systems:
  http://www.springerlink.com/content/e66u78n16w679417/
* from josh: is the converse of open problem 5.5 true? in other words, IF a
   class of equivalence problems has a complete problem, MUST our problem also
   be complete? As evidence, consider that most reasonable complexity classes
   have a complete problem which looks like this...see for example Sipser, "On
   relativization and the existence of complete sets" Theorem on page II.
* easier perhaps: if L is CEq-complete then C = coC?
* also: maybe if there is a NPEq complete problem, then NP=coNP?
* Mahaney type theorem: if there are "equivalence"-sparse (i.e. in number of
   equivalence classes) NPEq-complete problems, then P = NP.
* an equivalence relation can be considered as a graph consisting of the union
   of disjoint cliques (the equivalence classes)---does this help us lower the
   complexity of anything? (for example, deciding if a set is an eq. rel. is
   equivalent to determinining if each connected component is a clique [but
   there could be exponentially many connected components], or using the
   complement of clique, independent set, to do something with the complement
   of an equivalence relation)
